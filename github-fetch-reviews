#!/usr/bin/env python

import argparse
import json
import sys

import requests


def github_request(token, endpoint, params={}):
    req = requests.get(
        f"https://api.github.com{endpoint}",
        headers={
            'Accept': 'application/vnd.github+json',
            'X-GitHub-Api-Version': '2022-11-28',
            'Authorization': f"Bearer {token}",
        },
        params=params,
    )

    return req


def fetch_reviews(token, pull_requests_path, output_directory):
    with open(pull_requests_path, 'r') as pr_file:
        prs = json.load(pr_file)

        if len(prs) > 5000:
            print('error: Rate limit exceeded')
            sys.exit(1)

        for pr in prs:
            owner_repo = pr['head']['repo']['full_name']
            pull_number = pr['number']

            resp = github_request(
                token,
                f"/repos/{owner_repo}/pulls/{pull_number}/reviews",
                params={
                    'per_page': 1,
                }
            )

            with open(
                f"{output_directory}/{pull_number}.json",
                'w',
            ) as review_file:
                print(resp.text, file=review_file)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Fetch pull request reviews for a list of pull requests',
    )
    parser.add_argument(
        '--token',
        required=True,
        help='GitHub token',
    )
    parser.add_argument('pull_requests_file')
    parser.add_argument('output_directory')

    args = parser.parse_args()

    fetch_reviews(args.token, args.pull_requests_file, args.output_directory)
