#!/usr/bin/env python

# Copyright (c) 2024  Teddy Wing
#
# This file is part of github-review-stats.
#
# github-review-stats is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# github-review-stats is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with github-review-stats. If not, see
# <https://www.gnu.org/licenses/>.


import argparse
import collections
import datetime
import json


def date_floor(dt):
    return dt.replace(hour=0, minute=0, second=0)


def build_review_statistics(pull_requests_file, since):
    since_date = datetime.datetime.fromisoformat(since)
    since_date = since_date.replace(tzinfo=datetime.timezone.utc)

    days_until_merge = collections.defaultdict(lambda: 0)

    with open(pull_requests_file, 'r') as pr_file:
        prs = json.load(pr_file)

        for pr in prs:
            if not pr['merged_at']:
                continue

            pr_created_at = date_floor(
                datetime.datetime.fromisoformat(pr['created_at']))

            if pr_created_at < since_date:
                break

            pr_merged_at = date_floor(
                datetime.datetime.fromisoformat(pr['merged_at']))

            time_until_merge = pr_merged_at - pr_created_at

            days_until_merge[time_until_merge.days] += 1

    return days_until_merge


def plot_graph(pull_requests_file, days_until_merge):
    import matplotlib.pyplot

    graph_title = pull_requests_file.replace('.json', '')

    figure, axes = matplotlib.pyplot.subplots()
    # figure.set_figheight(7.5)
    # figure.set_figwidth(12)

    num_days = days_until_merge.keys()
    axes.bar(num_days, days_until_merge.values())

    axes.xaxis.set_major_locator(
        matplotlib.ticker.FixedLocator(range(0, max(num_days) + 1)),
    )
    axes.yaxis.set_major_locator(
        matplotlib.ticker.MultipleLocator(base=2),
    )
    axes.yaxis.set_minor_locator(
        matplotlib.ticker.AutoMinorLocator(n=2),
    )

    axes.set_title(graph_title + ' (2024-08-01 â€“ 2024-09-09)')
    axes.set_xlabel('Days until merge')
    axes.set_ylabel('Count of pull requests')

    matplotlib.pyplot.savefig(f"{graph_title}-days-until-merge.png", format='png')


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Generate a graph of days until pull request merge',
    )

    parser.add_argument(
        '--since',
        required=True,
        help='Fetch pull request reviews since date ("1970-01-01")',
    )
    parser.add_argument('pull_requests_file')

    args = parser.parse_args()

    days_until_merge = build_review_statistics(
        args.pull_requests_file,
        args.since,
    )
    plot_graph(args.pull_requests_file, days_until_merge)
